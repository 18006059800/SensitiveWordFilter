@startuml

abstract class AbstractList
abstract AbstractCollection
interface List
interface Collection

List <|-- AbstractList
Collection <|-- AbstractCollection

Collection <|- List
AbstractCollection <|- AbstractList
AbstractList <|-- ArrayList


class ArrayList {
Object[] elementData
size()
}

enum TimeUnit {
DAYS
HOURS
MINUTES
}

@enduml

@startuml

[基于规则机器学习]
[HDFS]

package "ElasticSearch" {
[update]
[analy]
[search]
}
package "spark" {
[SparkMlib]
[SparkStreaming]
}
[kafka:数据输入流] -[#00AA11]-> spark :敏感词热发现
spark -[#00AA11]-> [redis] : 新发现的敏感词存储到
[redis] -[#00AA11]-> [update] : 热词更新
spark -[#00AA11]-> [HDFS] : 将输入数据持久化



[kafka:数据输入流] -[#0000FF]> [storm:实时文本处理]
 [storm:实时文本处理] -[#0000FF]->  基于规则机器学习 : 敏感过滤
 基于规则机器学习 <-[#0000FF]-> [search]
  基于规则机器学习 <-[#0000FF]-> [analy]
 基于规则机器学习  -[#0000FF]-> [kafka:输出流] : 敏感词语句标记


@enduml

@startuml
[kafka]
package "ElasticSearch" {
[analy]
[search]
[update]
}
package "MachineLearning" {
[SparkMlib]
[SparkStreaming]
}
[kafka]  -> MachineLearning :敏感词热发现
MachineLearning -> [redis] : 新发现的敏感词存储到
[redis] -> [update] : 热词更新

:业务员: --> ElasticSearch :定期检验敏感词库的准确性
@enduml


@startuml
==敏感词过滤阶段==
kafka -> storm : 实时获取流数据
storm -> elasticsearch : 通过Ik插件完成分词
elasticsearch -> 机器学习模块 : 分别索引各个分词是否是敏感词
机器学习模块-> 健康语句流: 可以正常显示的敏感语句流
机器学习模块-> 不健康语句流: 不可以正常显示的敏感语句流
 健康语句流 -> 第三方展示平台

==热词发现更新阶段==
kafka->sparkstreaming: 每隔指定时间段获取数据
机器学习模块 <- sparkstreaming: 每隔指定时间段获取数据
sparkstreaming -> sparkMlib :模型训练
sparkMlib -> redis :发现敏感词,更新
redis -> elasticsearch: 更新Es敏感词库,创建敏感词库索引

==业务人员干预阶段==
业务人员 -> elasticsearch : 检查敏感词的准确性，进行删除，增加，更新
业务人员 -> 健康语句流: 针对一些评论类操作,业务人员可以进行敏感词人工判断
业务人员 -> 不健康语句流: 针对一些评论类操作,业务人员可以进行敏感词人工判断
@enduml


@startuml
package "视频终端" {
[M站]
[H5]
[web]
}

package "数据存储"{
[ES]
[Redis]
[hive]
[Hbase]
}

package "推荐算法"{
[sql级推荐]
[初步设计标签体系,用户画像]
[订阅,历史推荐,完善用户画像]
[个性化推荐,微服务]
}
视频终端 -> 数据存储 : flume 数据清理
数据存储 -> Redis : 实时推荐数据
数据存储-> hive :  历史行为数据,
数据存储 -> Hbase : 影片详单信息
数据存储 -> ES : 索引数据

数据存储 -> 推荐算法 : 逐步实现个性化推荐,构建360度用户画像
推荐算法 -> sql级推荐 : 通过sql挖掘推荐
推荐算法 -> [初步设计标签体系,用户画像]: 用户自定义标签,描述获取主题词挖掘
推荐算法-> [订阅,历史推荐,完善用户画像] : 引入订阅推荐订阅,分析历史点播行为推荐
推荐算法 -> [个性化推荐,微服务] :优化设计实现微信服务推荐,最终推荐结果是各服务的综合,或者排列优先级

基于视频的描述及标题-> [提取关键词,作为标签的依据]
基于历史点播行为 -> [用户点击视频加权,未点击惩罚,最终计算用户倾向]
基于时间序列推荐 -> [用户的周期行为,最近一段时间推荐过的]
基于订阅推荐 -> [订阅新的推荐   ]

@enduml

@startuml
[PC,APP应用] ->[kafka:input] :产生评论或弹幕语句
[kafka:input]-> [Storm] : 敏感过滤
[Storm] ->[kafka:output] : 语句敏感标记
[kafka:input] ->[spark] : 机器学习发现新的敏感词
[spark] -> [ElasticSearch] : 敏感词入库
[spark]-> [Redis] :敏感词入库
[spark] -> [hdfs] :语句备份
@enduml